# -*- coding: utf-8 -*-
"""bazier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gVNFkpFxpG8haqcabttToe3tlXcKXekk
"""

# Commented out IPython magic to ensure Python compatibility.
import google.colab as gc

gc.drive.mount("/content/drive", force_remount=True)
# %cd "/content/drive/MyDrive/Colab Notebooks/GlobalLogic"
# %pwd

import bezier

import numpy as np
import matplotlib.path as mpath
import matplotlib.patches as mpatches
import matplotlib.pyplot as plt

Path = mpath.Path
pcode = [Path.MOVETO, Path.CURVE4, Path.CURVE4, Path.CURVE4]

for ipic in [1, 2, 3]:
    print(f"Test #{ipic}")
    points = bezier.input_points("Test_" + str(ipic))
    Bezier = bezier.special_Bezier_interpolation(points)
    Bezier_etalon = bezier.input_points("Bezier_" + str(ipic) + "_etalon")
    bezier.save("Bezier_" + str(ipic), Bezier)

    fig, (ax1, ax2) = plt.subplots(1, 2)
    fig.set_figheight(15)
    fig.set_figwidth(5)

    N = np.shape(points)[0] - 1

    for ic in range(N):
        pp1 = mpatches.PathPatch(Path(Bezier[4 * ic : 4 * ic + 4],
                                      pcode), fc="none")
        ax1.add_patch(pp1)
    ax1.plot()

    for ic in range(N):
        pp2 = mpatches.PathPatch(Path(Bezier_etalon[4 * ic : 4 * ic + 4],
                                      pcode), fc="none", ec="blue")
        ax2.add_patch(pp2)
    ax2.plot()

    ax1.set_title('Solution')
    ax2.set_title('Etalon')

    plt.show()